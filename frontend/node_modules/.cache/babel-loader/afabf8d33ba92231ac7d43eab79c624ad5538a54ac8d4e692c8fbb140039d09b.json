{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thanh\\\\Desktop\\\\crawldata\\\\selenium\\\\.venv\\\\crawl\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n// import './App.css';\n// import user from '../src/assets/image/user.png';\n// import QuanLyWeb from './components/QuanLyWeb/QuanLyWeb.js';\n// import CrawlDuLieu from './components/CrawlDuLieu/CrawlDuLieu.js';\n// import Show from './components/Show/Show';\n\n// function App() {\n//   //khai báo \n//   const sidebarItems = [\n//     { name: 'Quản Lý Website', path: '/quan-ly-web', clickCount: 0 },\n//     { name: 'Crawl dữ liệu', path: '/crawl-du-lieu', clickCount: 0 }\n\n//   ];\n\n//   // Khai báo state để theo dõi index của mục được chọn\n//   const [selectedSidebarIndex, setSelectedSidebarIndex] = useState(null);\n\n//   // Xử lý khi một mục trong sidebar được nhấn\n//   const toggleSidebarItem = (index) => {\n//     if (selectedSidebarIndex != index) {\n//       // Nếu mục đang được chọn, bỏ chọn nó\n//       setSelectedSidebarIndex(index);\n//     }\n//   };\n\n//   /*\n//   //api\n//   const express = require('express');\n//   const app = express();\n//   const bodyParser = require('body-parser');\n//   const websiteRoutes = require('./routes/websiteRoutes');\n\n//   app.use(bodyParser.json());\n\n//   // Kết nối các tệp routes\n//   app.use('/api/websites', websiteRoutes);\n\n//   app.listen(3000, () => {\n//     console.log('Server is running on port 3000');\n//   });\n\n//   */\n//   return (\n//     <div className=\"admin-container\">\n//       <nav className=\"navbar\">\n//         <div className=\"logo\" >\n//           <a href=\"/\" onClick={(e) => { e.preventDefault(); window.location.href = '/' }} style={{ color: 'inherit', textDecoration: 'none', }}> Crawl Data </a>\n//         </div>\n//         <div className=\"user-info\">\n//           <span>User Name </span>\n//           <img src={user} alt=\"User Avatar\" />\n//         </div>\n//       </nav>\n//       <Router>\n//         <div className=\"content-container\">\n//           <div className=\"sidebar\">\n//             <ul>\n//               {sidebarItems.map((item, index) => (\n//                 <li key={index} className={selectedSidebarIndex === index ? 'active' : ''} >\n//                   <Link\n//                     to={item.path}\n//                     activeClassName=\"active\"\n//                     style={{ color: 'inherit', textDecoration: 'none' }} onClick={() => toggleSidebarItem(index)}> {item.name} </Link>\n\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <main className=\"content\">\n//             <div>\n\n//               <Routes>\n//                 <Route path=\"/quan-ly-web\" element={<QuanLyWeb />} />\n//                 <Route path=\"/crawl-du-lieu\" element={<CrawlDuLieu />} />\n//                 <Route path=\"/show-txt\" element={<Show />} />\n\n//               </Routes>\n//             </div>\n//           </main>\n//         </div>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleCrawl = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/crawl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url\n        })\n      });\n      const data = await response.json();\n      console.log(data.message);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Web Crawler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        placeholder: \"Enter URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrawl,\n        disabled: loading,\n        children: loading ? 'Crawling...' : 'Crawl'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GlWcAV50y+dLttY5vFnaPR1cxMk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","url","setUrl","loading","setLoading","handleCrawl","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Thanh/Desktop/crawldata/selenium/.venv/crawl/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\n// import './App.css';\r\n// import user from '../src/assets/image/user.png';\r\n// import QuanLyWeb from './components/QuanLyWeb/QuanLyWeb.js';\r\n// import CrawlDuLieu from './components/CrawlDuLieu/CrawlDuLieu.js';\r\n// import Show from './components/Show/Show';\r\n\r\n\r\n// function App() {\r\n//   //khai báo \r\n//   const sidebarItems = [\r\n//     { name: 'Quản Lý Website', path: '/quan-ly-web', clickCount: 0 },\r\n//     { name: 'Crawl dữ liệu', path: '/crawl-du-lieu', clickCount: 0 }\r\n\r\n\r\n\r\n//   ];\r\n\r\n//   // Khai báo state để theo dõi index của mục được chọn\r\n//   const [selectedSidebarIndex, setSelectedSidebarIndex] = useState(null);\r\n\r\n//   // Xử lý khi một mục trong sidebar được nhấn\r\n//   const toggleSidebarItem = (index) => {\r\n//     if (selectedSidebarIndex != index) {\r\n//       // Nếu mục đang được chọn, bỏ chọn nó\r\n//       setSelectedSidebarIndex(index);\r\n//     }\r\n//   };\r\n\r\n//   /*\r\n//   //api\r\n//   const express = require('express');\r\n//   const app = express();\r\n//   const bodyParser = require('body-parser');\r\n//   const websiteRoutes = require('./routes/websiteRoutes');\r\n\r\n//   app.use(bodyParser.json());\r\n\r\n//   // Kết nối các tệp routes\r\n//   app.use('/api/websites', websiteRoutes);\r\n\r\n//   app.listen(3000, () => {\r\n//     console.log('Server is running on port 3000');\r\n//   });\r\n\r\n//   */\r\n//   return (\r\n//     <div className=\"admin-container\">\r\n//       <nav className=\"navbar\">\r\n//         <div className=\"logo\" >\r\n//           <a href=\"/\" onClick={(e) => { e.preventDefault(); window.location.href = '/' }} style={{ color: 'inherit', textDecoration: 'none', }}> Crawl Data </a>\r\n//         </div>\r\n//         <div className=\"user-info\">\r\n//           <span>User Name </span>\r\n//           <img src={user} alt=\"User Avatar\" />\r\n//         </div>\r\n//       </nav>\r\n//       <Router>\r\n//         <div className=\"content-container\">\r\n//           <div className=\"sidebar\">\r\n//             <ul>\r\n//               {sidebarItems.map((item, index) => (\r\n//                 <li key={index} className={selectedSidebarIndex === index ? 'active' : ''} >\r\n//                   <Link\r\n//                     to={item.path}\r\n//                     activeClassName=\"active\"\r\n//                     style={{ color: 'inherit', textDecoration: 'none' }} onClick={() => toggleSidebarItem(index)}> {item.name} </Link>\r\n\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//           <main className=\"content\">\r\n//             <div>\r\n\r\n//               <Routes>\r\n//                 <Route path=\"/quan-ly-web\" element={<QuanLyWeb />} />\r\n//                 <Route path=\"/crawl-du-lieu\" element={<CrawlDuLieu />} />\r\n//                 <Route path=\"/show-txt\" element={<Show />} />\r\n\r\n//               </Routes>\r\n//             </div>\r\n//           </main>\r\n//         </div>\r\n//       </Router>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCrawl = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('/crawl', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ url }),\r\n      });\r\n      const data = await response.json();\r\n      console.log(data.message);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Web Crawler</h1>\r\n        <input\r\n          type=\"text\"\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n          placeholder=\"Enter URL\"\r\n        />\r\n        <button onClick={handleCrawl} disabled={loading}>\r\n          {loading ? 'Crawling...' : 'Crawl'}\r\n        </button>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;QACrCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAI,CAAC;MAC9B,CAAC,CAAC;MACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA;MAAQqB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BtB,OAAA;QAAAsB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB1B,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,GAAI;QACX0B,QAAQ,EAAGC,CAAC,IAAK1B,MAAM,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxCI,WAAW,EAAC;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF1B,OAAA;QAAQiC,OAAO,EAAE1B,WAAY;QAAC2B,QAAQ,EAAE7B,OAAQ;QAAAiB,QAAA,EAC7CjB,OAAO,GAAG,aAAa,GAAG;MAAO;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CAvCQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}